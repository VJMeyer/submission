{
  "hash": "0a4c9f9751457ec6e9ade5e129badf25",
  "result": {
    "engine": "jupyter",
    "markdown": "# Quarto Syntax\n\n::: {#4de09130 .cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nprint(\"AMTAIR is working!\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAMTAIR is working!\n```\n:::\n:::\n\n\n## For Callouts\n\nQuarto's native callouts work without additional packages:\n\n::: {.callout-note}\n## Important Note2\nThis renders perfectly in both HTML and PDF.2\n:::\n\nAlso for markdown:\n\n```markdown\n::: {.render_as_markdown_example}\n## Markdown Heading\nThis renders perfectly in both HTML and PDF but as markdown \"plain text\"\n:::\n```\n\n## Section Cross-References {#sec-crossref}\n\nRefer to sections like: @sec-adaptive-governance and @sec-crossref\n\n\n```markdown\nCaveat: refering to sections with @sec-HEADINGS works only for sections with:\n## Heading {#sec-HEADINGS}\nIt does not work for sections with \".unnumbered and/or .unlisted\":\n## Heading {#sec-HEADINGS .unnumbered .unlisted}\n```\n\n\n## Reference Code from .ipynb files\n\n#### Code chunks from .ipynb notebooks can be embedded in the .qmd text with:\n\n```markdown\n{{< embed /AMTAIR_Prototype/data/example_carlsmith/AMTAIR_Prototype_example_carlsmith.ipynb#my_code_cell_test >}}\n```\n#### which produces the output of executing the code cell:\n\n{{< embed /AMTAIR_Prototype/data/example_carlsmith/AMTAIR_Prototype_example_carlsmith.ipynb#my_code_cell_test >}}\n\nFull Notebooks are embedded in the Appendix through the _quarto.yml file with:\n\n```markdown\n{{< embed /AMTAIR_Prototype/data/example_carlsmith/AMTAIR_Prototype_example_carlsmith.ipynb#my_code_cell_test >}}\n```\n\n\n\n## Figures {#sec-figures1 .unnumbered .unlisted}\n\n\n[![AMTAIR Automation Pipeline from @bucknall2022](/images/pipeline.png){\n  #fig-automation_pipeline\n  fig-scap=\"Five-step AMTAIR automation pipeline from PDFs to Bayesian networks\" \n  fig-alt=\"FLOWCHART: Five-step automation pipeline workflow for AMTAIR project.\n          DATA: The pipeline transforms PDFs through ArgDown, BayesDown, CSV, and HTML into Bayesian network visualizations.\n          PURPOSE: Illustrates the core technical process that enables automated extraction of probabilistic models from AI safety literature.\n          DETAILS: Five numbered green steps show: (1) LLM-based extraction from PDFs to ArgDown, (2) ArgDown to BayesDown completion with probabilities, (3) Extracting world-models as CSV data, (4) Software tools for data inference, and (5) Visualization of the resulting Bayesian network.\n          Each step includes example outputs, with the final visualization showing a Rain-Sprinkler-Grass Wet Bayesian network with probability tables.\n          SOURCE: Created by the author to explain the AMTAIR methodology\n          \"\n  fig-align=\"center\" \n  width=\"100%\"\n  }](https://github.com/VJMeyer/submission)\n\n\nTesting crossreferencing grapics @fig-automation_pipeline.\n\n![Caption/Title 2](/images/cover.png){#fig-testgraphic2 fig-scap=\"Short 2 caption\" fig-alt=\"2nd Alt Text / Description.\" fig-align=\"left\" width=\"30%\"}\n\nTesting crossreferencing grapics @fig-testgraphic2.\n\n\n## Citations {#sec-citations .unnumbered .unlisted}\n\n\n\n@soares2014 <!-- preferred because it works with both html, latex and pdf -->\n\n[@soares2014] and [@knuth1984]\n\n\nBlah Blah [see @knuth1984, pp. 33-35; also @growiec2024, chap. 1]\n\nBlah Blah [@knuth1984, pp. 33-35, 38-39 and passim]\n\nBlah Blah [@growiec2024; @knuth1984].\n\nGrowiec says blah [-@growiec2024]\n\n\n\n\n\n## Headings & Potential Headings {#sec-heading}\n\n\n<!-- Comments for comments -->\n\n<!-- [ ] ToDos for things to do / tasks / reminders (allows \"jump to with Taks Tree extension\") -->\n\n\n\n`verbatim code formatting for notes and ideas to be included (here)`\n\n```\nAlso code blocks for more extensive notes and ideas to be included and checklists\n- test 1. \n- test 2. \n- test 3.\n2. second\n3. third\n\n```\n\n> Blockquote formatting for \"Suggested Citations (e.g. carlsmith 2024 on ...)\" and/or claims which require a citation (e.g. claim x should be backed-up by a ciation from the literature)\n\n\n\n\nHere is an inline note.^[Inlines notes are easier to write, since you don't have to pick an identifier and move down to type the note.]\n\n\nHere is a footnote reference,[^1] \n\n[^1]: Here is the footnote.\n\n\n\n\n```{=latex}\n\\renewcommand*{\\labelitemi}{\\textgreater}\n```\n\n\nHere's some raw inline HTML: `<a>html</a>`{=html}\n\n\npage 1\n\n{{< pagebreak >}}\n\npage 2\n\n\n```{mermaid}\nflowchart LR\n  A[Hard edge] --> B(Round edge)\n  B --> C{Decision}\n  C --> D[Result one]\n  C --> E[Result two]\n```\n\nTesting crossreferencing grapics @fig-automation_pipeline.\n\n\n\n\n\n\n# Bibliography (References) {.unnumbered}\n\n::: {#refs}\n:::\n\n\n<!-- If you want to include items in the bibliography without actually citing them in the body text, you can define a dummy nocite metadata field and put the citations there:\n---\nnocite: |\n  @item1, @item2\n---\n\n@item3\n -->\n\n\n <!-- ## Sidebars for comments {.sidebar}\nCreate Sidebars by applying the .sidebar attribute to a level 1 heading (for global sidebars) or level 2 heading (for page level sidebars). -->\n\n",
    "supporting": [
      "references_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}